!function(e){"use strict";e.module("angular-elastic-builder",["RecursionHelper","ui.bootstrap"])}(window.angular),function(e){"use strict";e.module("angular-elastic-builder").directive("elasticBuilder",["elasticQueryService",function(e){return{scope:{data:"=elasticBuilder"},templateUrl:"angular-elastic-builder/BuilderDirective.html",link:function(t){var n=t.data;n.filters&&(t.filters=n.filters),t.removeChild=function(e){t.filters.splice(e,1)},t.addRule=function(){t.filters.push({})},t.addGroup=function(){var e={type:"group",subType:"bool",rules:[{type:"group",subType:"must",rules:[]}]};t.filters.push(e)},t.$watch("data.needsUpdate",function(a){a&&(t.filters=e.toFilters(n.query,t.data.fields),t.data.needsUpdate=!1)}),t.$watch("filters",function(a){if(a){var i=e.toQuery(t.filters,t.data.fields);n.query=i}},!0)}}}])}(window.angular),function(e){"use strict";var t=e.module("angular-elastic-builder");t.directive("elasticBuilderChooser",["RecursionHelper","groupClassHelper",function(e,t){return{scope:{elasticFields:"=",item:"=elasticBuilderChooser",onRemove:"&"},templateUrl:"angular-elastic-builder/ChooserDirective.html",compile:function(n){return e.compile(n,function(e,n,a){var i=e.depth=+a.depth,l=e.item;e.getGroupClassName=function(){var e=i;return"group"===l.type&&e++,t(e)}})}}}])}(window.angular),function(e){"use strict";var t=e.module("angular-elastic-builder");t.directive("elasticBuilderGroup",["RecursionHelper","groupClassHelper",function(e,t){return{scope:{elasticFields:"=",group:"=elasticBuilderGroup",onRemove:"&"},templateUrl:"angular-elastic-builder/GroupDirective.html",compile:function(n){return e.compile(n,function(e,n,a){var i=e.depth=+a.depth,l=e.group;e.addRule=function(){l.rules.push({})},e.addGroup=function(){var e={type:"group",subType:"bool",rules:[{type:"group",subType:"must",rules:[]}]};"bool"==l.subType&&(e={type:"group",subType:"must",rules:[]}),l.rules.push(e)},e.removeChild=function(e){l.rules.splice(e,1)},e.getGroupClassName=function(){return t(i+1)}})}}}])}(window.angular),function(e){"use strict";var t=e.module("angular-elastic-builder");t.directive("elasticBuilderRule",[function(){return{scope:{elasticFields:"=",rule:"=elasticBuilderRule",onRemove:"&"},templateUrl:"angular-elastic-builder/RuleDirective.html",link:function(e){e.getType=function(){var t=e.elasticFields,n=e.rule.field;if(t&&n)return n.options||(n.options=[]),"boolean"===n.subType?"boolean":n.type}}}}])}(window.angular),function(e){"use strict";var t=e.module("angular-elastic-builder");t.directive("elasticType",[function(){return{scope:{type:"=elasticType",rule:"=",guide:"="},template:'<ng-include src="getTemplateUrl()" />',link:function(e){function t(e){var t=e.date,n=e.mode;return"day"===n&&(0===t.getDay()||6===t.getDay())}e.getTemplateUrl=function(){var t=e.type;if(t)return t=t.charAt(0).toUpperCase()+t.slice(1),"angular-elastic-builder/types/"+t+".html"},e.isSelect=function(){return!e.guide.nested&&e.guide.options.length&&("notEquals"==e.rule.subType||"equals"==e.rule.subType)},e.isObject=function(){return e.guide.object&&e.guide.options.length},e.isNested=function(){return e.guide.nested&&e.guide.options.length&&("notEquals"==e.rule.subType||"equals"==e.rule.subType)},e.keyValueChanged=function(t){if(t){var n=e.guide.options.filter(function(t){return t[e.guide.fieldKey]==e.rule.valueKey});if(n.length){var a=n[0][e.guide.fieldValue];e.rule[e.guide.fieldValue]=a}}},e.booleans=["False","True"],e.booleansOrder=["True","False"],e.inputNeeded=function(){var t=["equals","notEquals","match_phrase","gt","gte","lt","lte"];return~t.indexOf(e.rule.subType)||"match"===e.rule.subType&&e.guide.object},e.inputPercentNeeded=function(){var t=["match"];return~t.indexOf(e.rule.subType)},e.numberNeeded=function(){var t=["last","next"];return~t.indexOf(e.rule.subType)},e.today=function(){e.rule.date=new Date},e.today(),e.clear=function(){e.rule.date=null},e.dateOptions={dateDisabled:t,formatYear:"yy",maxDate:new Date(2018,1,13),minDate:new Date,startingDay:1},e.open1=function(){e.popup1.opened=!0},e.setDate=function(t,n,a){e.rule.date=new Date(t,n-1,a)},e.formats=["yyyy-MM-ddTHH:mm:ss","yyyy-MM-ddTHH:mm:ssZ","yyyy-MM-dd","dd-MMMM-yyyy","yyyy/MM/dd","shortDate"],e.rule.dateFormat=e.formats[0],e.format=e.rule.dateFormat,e.altInputFormats=["M!/d!/yyyy"],e.popup1={opened:!1}}}}])}(window.angular),function(e){"use strict";e.module("angular-elastic-builder").factory("groupClassHelper",function(){return function(e){var t=["","list-group-item-info","list-group-item-success","list-group-item-warning","list-group-item-danger"];return t[e%t.length]}})}(window.angular),function(e){"use strict";function t(e,t){var n=[],i={};i=e.nested?e.nested.query:e,Object.keys(i).forEach(function(e){var t={};t[e]=i[e],n.push(t)});var l=n.map(a.bind(n,t)).filter(function(e){return!!e});return l}function n(e,t,n){var a=e.map(i.bind(e,t,n)).filter(function(e){return!!e}),l=function(e){var t=null;return e.forEach(function(e){if(!e.field&&e.rules&&e.rules.length&&(t=l(e.rules)),e.field&&e.field.nested)return t=e.field}),t},o={};a.forEach(function(e){Object.keys(e).forEach(function(t){o[t]=e[t]})});var u=l(e);return u&&(o={nested:{path:u.nestedPath||u.name,query:{bool:o.bool}}}),o}function a(t,n,i){i!==!1&&(i=!0);var o=Object.keys(n)[0],u={bool:"group",must:"group",should:"group",must_not:"group",filter:"group",range:"number"},r=u[o]||"item",s=l(r),d=Object.keys(n[o])[0];switch("match"!==o||n[o][d].minimum_should_match||(o="term"),o){case"bool":var c=[];Object.keys(n[o]).forEach(function(e){var t={};t[e]=n[o][e],c.push(t)}),s.rules=c.map(a.bind(n,t)),s.subType=o;break;case"should":case"must":case"must_not":case"filter":s.rules=n[o].map(a.bind(n,t)),s.subType=o;break;case"missing":case"exists":var p=n[o].field,f=t.filter(function(e){return e.name==p});if(!f.length)return console.log("No fieldData",t),{};s.field=f[0],s.subType={exists:"exists",missing:"notExists"}[o],delete s.value;break;case"match":case"match_phrase":var p=Object.keys(n[o])[0],m=p,g="";if(~m.indexOf(".")){var b=m.split(".");p=b[0],g=b[1]}var f=t.filter(function(e){return e.name==p});if(!f.length)return console.log("No fieldData",t),{};if(s.field=f[0],s.field.options&&s.field.options.length){if(s.field.object){var v=s.field.fieldKey||"name",y=s.field.fieldValue||"value",h=p+"."+v,T=p+"."+y;s.valueKey=g,s.field.options.forEach(function(e){e.name==s.valueKey&&(s[y]=e[y])})}s.subType=o,s.matchingPercent=parseInt(n[o][m].minimum_should_match.slice(0,-1)),s.operator=n[o][m].operator}else"match"!=o?s.value=n[o][p].slop:(s.matchingPercent=parseInt(n[o][m].minimum_should_match.slice(0,-1)),s.operator=n[o][m].operator),s.subType=o;break;case"term":case"terms":n[o]||(o="match");var m=Object.keys(n[o])[0],p=m,g="";if(~m.indexOf(".")){var b=m.split(".");p=b[0],g=b[1]}var f=t.filter(function(e){return e.name==p});if(!f.length)return console.log("No fieldData",t),{};if(s.field=f[0],"multi"===s.field.type){var k=n[o][p];"string"==typeof k&&(k=[k]),s.values=s.field.choices.reduce(function(e,t){return e[t]=n[o][p].indexOf(t)!==-1,e},{})}else if(s.field.options&&s.field.options.length)if(s.field.nested||s.field.object){var v=s.field.fieldKey||"name",y=s.field.fieldValue||"value",h=p+"."+v,T=p+"."+y;if(s.valueKey=n[o][h],g&&(s.valueKey=g),s.field.nested&&(s.value=n[o][T]),s.subType="equals",s.field.options.forEach(function(e){e.name==s.valueKey&&(s[y]=e[y])}),!s.valueKey&&s.value){s.field.options.forEach(function(e){e[y].forEach(function(t){if(t==s.value)return s.valueKey=e[v],void(s[y]=e[y])}),s.valueKey})}}else"object"==typeof n[o][p]?s.value=n[o][p].query:s.value=n[o][p],s.subType="equals";else s.subType=i?"equals":"notEquals",s.value=n[o][p],"number"==typeof s.value&&(s.subType="boolean");break;case"range":var x,w,p=Object.keys(n[o])[0],f=t.filter(function(e){return e.name==p});if(!f.length)return console.log("No fieldData",t),{};if(s.field=f[0],s.subType=Object.keys(n[o][p])[0],e.isNumber(n[o][p][s.subType])){s.value=n[o][p][s.subType];break}if(e.isDefined(Object.keys(n[o][p])[1])){if(x=n[o][p].gte,~x.indexOf("now-")){s.subType="last",s.value=parseInt(x.split("now-")[1].split("d")[0]);break}if(~x.indexOf("now")){s.subType="next",x=n[o][p].lte,s.value=parseInt(x.split("now+")[1].split("d")[0]);break}s.subType="equals",w=x.split("T")[0].split("-"),s.date=w[2]+"/"+w[1]+"/"+w[0];break}x=n[o][p][s.subType],w=x.split("T")[0].split("-"),s.date=w[2]+"/"+w[1]+"/"+w[0];break;case"not":s=a(t,n[o].filter,!1);break;default:s.field=Object.keys(n[o])[0]}return s}function i(t,n,a){var l={};if("group"===a.type){if(l={},"bool"===a.subType){var u=a.rules.map(i.bind(a,t,n)).filter(function(e){return!!e});return l[a.subType]={},u.forEach(function(e){l[a.subType][Object.keys(e)[0]]=e[Object.keys(e)[0]]}),l}return l[a.subType]=a.rules.map(i.bind(a,t,n)).filter(function(e){return!!e}),l}var r=a.field,s=t.find(function(t){return"object"==typeof r?(t.options||(t.options=[]),e.equals(t,r)):t.name==r});if(s){var d=s.name;if(d){switch(s.type){case"term":if("boolean"===s.subType&&(a.subType="boolean"),!a.subType)return;switch(a.subType){case"equals":case"boolean":if(!s.nested&&void 0===!a.value)return;if(s.nested||s.object){l.match={};var c=(s.fieldKey||"name",s.fieldValue||"value"),p=d+"."+c;if(a.value&&!s.object)l.match[p]=a.value;else{var f=d+"."+a.valueKey+"."+c;l.match[f]={},l.match[f].query=a.value,l.match[f].minimum_should_match="100%",l.match[f].operator="and"}}else l.match={},l.match[d]={},l.match[d].query=a.value,l.match[d].operator="and";break;case"notEquals":if(void 0===a.value)return;l.not={filter:{term:{}}},l.not.filter.term[d]=a.value;break;case"exists":l.exists={field:d};break;case"notExists":if(void 0===a.value)return;l.missing={field:d};break;case"match":if(void 0===a.matchingPercent)return;if(l={match:{}},s.object){l.match={};var c=(s.fieldKey||"name",s.fieldValue||"value"),p=d+"."+c;if(a.value)l.match[p]=a.value;else{var f=d+"."+a.valueKey+"."+c;l.match[f]={},l.match[f].query="%"+f+"%",l.match[f].minimum_should_match=a.matchingPercent+"%",l.match[f].operator=a.operator}}else l.match[d]={},l.match[d].query="%"+d+"%",l.match[d].minimum_should_match=a.matchingPercent+"%",l.match[d].operator=a.operator;break;case"match_phrase":if(void 0===a.value)return;l={match_phrase:{}},l.match_phrase[d]={},l.match_phrase[d].query="%"+d+"%",l.match_phrase[d].slop=a.value;break;default:throw new Error("unexpected subtype "+a.subType)}break;case"number":l.range={},l.range[d]={},l.range[d][a.subType]=a.value;break;case"date":if(!a.subType)return;switch(a.subType){case"equals":if(!e.isDate(a.date))return;l.term={},l.term[d]=o(n,a.date,a.dateFormat);break;case"lt":case"lte":if(!e.isDate(a.date))return;l.range={},l.range[d]={},l.range[d][a.subType]=o(n,a.date,a.dateFormat);break;case"gt":case"gte":if(!e.isDate(a.date))return;l.range={},l.range[d]={},l.range[d][a.subType]=o(n,a.date,a.dateFormat);break;case"last":if(!e.isNumber(a.value))return;l.range={},l.range[d]={},l.range[d].gte="now-"+a.value+"d",l.range[d].lte="now";break;case"next":if(!e.isNumber(a.value))return;l.range={},l.range[d]={},l.range[d].gte="now",l.range[d].lte="now+"+a.value+"d";break;case"exists":l.exists={field:d};break;case"notExists":l.missing={field:d};break;default:throw new Error("unexpected subtype "+a.subType)}break;case"multi":l.terms={},l.terms[d]=Object.keys(a.values||{}).reduce(function(e,t){return a.values[t]&&e.push(t),e},[]);break;default:throw new Error("unexpected type")}return l}}}function l(t){var n={group:{type:"group",subType:"",rules:[]},item:{field:"",subType:"",value:""},number:{field:"",subType:"",value:null}};return e.copy(n[t])}function o(t,n,a){if(!e.isDate(n))return!1;var i=t("date")(n,a);return i}e.module("angular-elastic-builder").factory("elasticQueryService",["$filter",function(e){return{toFilters:t,toQuery:function(t,a){return n(t,a,e)}}}])}(window.angular),function(e){"use strict";e.module("angular-elastic-builder").run(["$templateCache",function(e){e.put("angular-elastic-builder/BuilderDirective.html",'<div class="elastic-builder">\n  <div class="filter-panels">\n    <div class="list-group form-inline">\n      <div\n        data-ng-repeat="filter in filters"\n        data-elastic-builder-chooser="filter"\n        data-elastic-fields="data.fields"\n        data-on-remove="removeChild($index)"\n        data-depth="0"></div>\n        <div class="list-group-item actions">\n        <!--   <a class="btn btn-xs btn-primary" title="Add Rule" data-ng-click="addRule()">\n          <i class="fa fa-plus"></i>\n        </a>-->\n        <a class="btn btn-xs btn-primary" title="Add Group" data-ng-click="addGroup()">\n          <i class="fa fa-list"></i>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n'),e.put("angular-elastic-builder/ChooserDirective.html",'<div ng-if="item.subType != \'bool\'"\n  class="list-group-item elastic-builder-chooser"\n  data-ng-class="getGroupClassName()">\n\n  <div data-ng-if="item.type === \'group\'"\n    data-elastic-builder-group="item"\n    data-depth="{{ depth }}"\n    data-elastic-fields="elasticFields"\n    data-on-remove="onRemove()"></div>\n\n  <div data-ng-if="item.type !== \'group\'"\n    data-elastic-builder-rule="item"\n    data-elastic-fields="elasticFields"\n    data-on-remove="onRemove()"></div>\n\n</div>\n\n<div ng-if="item.subType == \'bool\'"\n  class="list-group-item elastic-builder-chooser"\n  data-ng-class="getGroupClassName()">\n\n  <div data-ng-if="item.type === \'group\'"\n    data-elastic-builder-group="item"\n    data-depth="{{ depth }}"\n    data-elastic-fields="elasticFields"\n    data-on-remove="onRemove()"></div>\n\n</div>\n'),e.put("angular-elastic-builder/GroupDirective.html",'<div class="elastic-builder-group">\n  <h5 ng-if="group.subType != \'bool\'">\n    <select data-ng-model="group.subType" class="form-control">\n      <option value="must">must</option>\n      <option value="must_not">must_not</option>\n      <option value="should">should</option>\n    </select>\n    Match these conditions\n  </h5>\n\n  <div\n    data-ng-repeat="rule in group.rules"\n    data-elastic-builder-chooser="rule"\n    data-elastic-fields="elasticFields"\n    data-depth="{{ +depth + 1 }}"\n    data-on-remove="removeChild($index)"></div>\n\n  <div class="list-group-item actions" data-ng-class="getGroupClassName()">\n    <a class="btn btn-xs btn-primary" title="Add Sub-Rule" data-ng-click="addRule()">\n      <i class="fa fa-plus"></i>\n    </a>\n    <a class="btn btn-xs btn-primary" title="Add Sub-Group" data-ng-click="addGroup()">\n      <i class="fa fa-list"></i>\n    </a>\n  </div>\n\n  <a class="btn btn-xs btn-danger remover" data-ng-click="onRemove()">\n    <i class="fa fa-minus"></i>\n  </a>\n</div>\n'),e.put("angular-elastic-builder/RuleDirective.html",'<div class="elastic-builder-rule">\n  <select class="form-control" data-ng-model="rule.field" data-ng-options="field as field.title for (key,field) in elasticFields track by field.name"></select>\n\n  <span data-elastic-type="getType()" data-rule="rule" data-guide="rule.field"></span>\n\n  <a class="btn btn-xs btn-danger remover" data-ng-click="onRemove()">\n    <i class="fa fa-minus"></i>\n  </a>\n\n</div>\n'),e.put("angular-elastic-builder/types/Boolean.html",'<span class="boolean-rule">\n  Equals\n\n  <!-- This is a weird hack to make sure these are numbers -->\n  <select\n    data-ng-model="rule.value"\n    class="form-control"\n    data-ng-options="booleans.indexOf(choice) as choice for choice in booleansOrder">\n  </select>\n</span>\n'),e.put("angular-elastic-builder/types/Date.html",'<span class="date-rule form-inline">\n  <select data-ng-model="rule.subType" class="form-control">\n    <optgroup label="Exact">\n      <option value="equals">=</option>\n    </optgroup>\n    <optgroup label="Unbounded-range">\n      <option value="lt">&lt;</option>\n      <option value="lte">&le;</option>\n      <option value="gt">&gt;</option>\n      <option value="gte">&ge;</option>\n    </optgroup>\n    <optgroup label="Bounded-range">\n      <option value="last">In the last</option>\n      <option value="next">In the next</option>\n    </optgroup>\n    <optgroup label="Generic">\n      <option value="exists">Exists</option>\n      <option value="notExists">! Exists</option>\n    </optgroup>\n  </select>\n\n  <div class="form-group">\n    <div class="input-group">\n      <input data-ng-if="inputNeeded()"\n        type="text"\n        class="form-control"\n        data-uib-datepicker-popup="{{ rule.dateFormat }}"\n        data-ng-model="rule.date"\n        data-is-open="popup1.opened"\n        data-datepicker-options="dateOptions"\n        data-ng-required="true"\n        data-close-text="Close" />\n      <div class="input-group-btn">\n        <button type="button" class="btn btn-default" ng-click="open1()" data-ng-if="inputNeeded()">\n          <i class="fa fa-calendar"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <span class="form-inline">\n    <div class="form-group">\n      <label data-ng-if="inputNeeded()">Format</label>\n      <select\n        class="form-control"\n        data-ng-model="rule.dateFormat"\n        data-ng-if="inputNeeded()"\n        ng-options="f for f in formats"></select>\n    </div>\n  </span>\n\n  <span data-ng-if="numberNeeded()">\n    <input type="number" class="form-control" data-ng-model="rule.value" min=0> days\n  </span>\n\n</span>\n'),e.put("angular-elastic-builder/types/Multi.html",'<span class="multi-rule">\n  <span data-ng-repeat="choice in guide.choices">\n    <label class="checkbox">\n      <input type="checkbox" data-ng-model="rule.values[choice]">\n      {{ choice }}\n    </label>\n  </span>\n</span>\n'),e.put("angular-elastic-builder/types/Number.html",'<span class="number-rule">\n  <select data-ng-model="rule.subType" class="form-control">\n    <optgroup label="Numeral">\n      <option value="equals">=</option>\n      <option value="gt">&gt;</option>\n      <option value="gte">&ge;</option>\n      <option value="lt">&lt;</option>\n      <option value="lte">&le;</option>\n    </optgroup>\n\n    <optgroup label="Generic">\n      <option value="exists">Exists</option>\n      <option value="notExists">! Exists</option>\n    </optgroup>\n  </select>\n\n  <!-- Range Fields -->\n  <input data-ng-if="inputNeeded()"\n    class="form-control"\n    data-ng-model="rule.value"\n    type="number"\n    min="{{ guide.minimum }}"\n    max="{{ guide.maximum }}">\n</span>\n'),e.put("angular-elastic-builder/types/Select.html",'<span class="select-rule">\n  Equals to\n  <select class="form-control" data-ng-model="rule.value">\n      <option  data-ng-repeat="option in guide.options" value="{{option.value || option}}">{{option.name || option}}</option>\n  </select>\n</span>\n'),e.put("angular-elastic-builder/types/Term.html",'<span class="elastic-term">\n\n  <select data-ng-model="rule.subType" class="form-control">\n\n    <!-- Matching Options -->\n    <optgroup label="Matching">\n      <option value="match">Minimum Should Match (%)</option>\n      <option value="match_phrase">Match Phrase (slop)</option>\n      <!-- <option value="notMatch">! Match</option> -->\n    </optgroup>\n\n    <!-- Term Options -->\n    <optgroup label="Text">\n      <option value="equals">Equals</option>\n      <!-- <option value="notEquals">! Equals</option> -->\n    </optgroup>\n\n    <!-- Generic Options -->\n    <optgroup label="Generic">\n      <option value="exists">Exists</option>\n      <!-- <option value="notExists">! Exists</option> -->\n    </optgroup>\n\n  </select>\n  <input\n    data-ng-if="inputNeeded() && !isSelect() && !isNested() && !isObject()"\n    class="form-control"\n    data-ng-model="rule.value"\n    type="text">\n\n\n    <select data-ng-if="inputNeeded() && isSelect() && !isObject()" class="form-control select2" data-ng-model="rule.value">\n        <option  data-ng-repeat="option in guide.options" value="{{option.value || option}}">{{option.name || option}}</option>\n    </select>\n\n    <select data-ng-if="inputNeeded() && isSelect() && isObject() && !inputPercentNeeded()" ng-change="keyValueChanged(rule.valueKey)" class="form-control select2" data-ng-model="rule.valueKey">\n        <option  data-ng-repeat="option in guide.options" value="{{option[guide.fieldKey]}}">{{option[guide.fieldKey]}}</option>\n    </select>\n\n    <select data-ng-if="inputNeeded() && isObject() && !inputPercentNeeded()" class="form-control select2" data-ng-model="rule.value">\n        <option  data-ng-repeat="option in rule[guide.fieldValue]"  value="{{option}}">{{option}}</option>\n    </select>\n\n    <select data-ng-if="inputNeeded() && isNested()" ng-change="keyValueChanged(rule.valueKey)" class="form-control select2" data-ng-model="rule.valueKey">\n        <option  data-ng-repeat="option in guide.options" value="{{option[guide.fieldKey]}}">{{option[guide.fieldKey]}}</option>\n    </select>\n\n\n    <select data-ng-disabled="!rule.valueKey" data-ng-if="inputNeeded() && isNested()" class="form-control select2" data-ng-model="rule.value">\n        <option  data-ng-repeat="value in rule[guide.fieldValue]" value="{{value}}">{{value}}</option>\n    </select>\n\n    <select data-ng-if="inputNeeded() && isObject() && inputPercentNeeded()" class="form-control select2" data-ng-model="rule.valueKey">\n        <option  data-ng-repeat="option in guide.options" value="{{option[guide.fieldKey]}}">{{option[guide.fieldKey]}}</option>\n    </select>\n\n    <input\n    data-ng-if="inputPercentNeeded()"\n    type="number" data-ng-model="rule.matchingPercent"\n    class="form-control" placeholder="Seuil de matching...">\n\n    <select\n    data-ng-if="inputPercentNeeded()"\n    data-ng-model="rule.operator"\n    class="form-control select2">\n    <option value="or">OR</option>\n    <option value="and">AND</option>\n    </select>\n\n</span>\n')}])}(window.angular);